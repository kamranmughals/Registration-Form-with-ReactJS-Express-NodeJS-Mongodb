{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mern Stack\\\\Nodejs Express and MongoDB\\\\my-app\\\\Client\\\\src\\\\register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [inputValue, setinputValue] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\"\n  });\n  const [allentry, setallentry] = useState([]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const entries = {\n      firstname: inputValue.firstname,\n      lastname: inputValue.lastname,\n      email: inputValue.email,\n      password: inputValue.password,\n      confirmpassword: inputValue.confirmpassword\n    };\n    if (inputValue.password === inputValue.confirmpassword) {\n      setallentry([...allentry, entries]);\n      console.log(\"Matched\");\n    } else {\n      console.log(\"Not matched\");\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setinputValue({\n      ...inputValue,\n      [name]: value\n    });\n  };\n  const PostData = async e => {\n    e.preventDefault();\n    const {\n      firstname,\n      lastname,\n      email,\n      password,\n      confirmpassword\n    } = inputValue;\n    const res = await fetch(\"/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        firstname,\n        lastname,\n        email,\n        password,\n        confirmpassword\n      })\n    });\n    const response = await res.json();\n    if (response.status === 404 || !response) {\n      console.log('invalid registrtion');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"FirstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"name\",\n          name: \"firstname\",\n          value: inputValue.firstname,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"FirstName\",\n          children: \"last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"name\",\n          name: \"lastname\",\n          value: inputValue.lastname,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-mail Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          autoComplete: \"off\",\n          value: inputValue.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: inputValue.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpassword\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmpassword\",\n          value: inputValue.confirmpassword,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: PostData,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Register, \"aXebmjYHowqgerix6+piHsOPo8c=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Register","inputValue","setinputValue","firstname","lastname","email","password","confirmpassword","allentry","setallentry","handleSubmit","e","preventDefault","entries","console","log","handleChange","event","name","value","target","PostData","res","fetch","method","headers","body","JSON","stringify","response","json","status"],"sources":["D:/Mern Stack/Nodejs Express and MongoDB/my-app/Client/src/register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Register = () => {\r\n  const [inputValue, setinputValue] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmpassword: \"\",\r\n  });\r\n  const [allentry, setallentry] = useState([]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const entries = {\r\n      firstname: inputValue.firstname,\r\n      lastname: inputValue.lastname,\r\n      email: inputValue.email,\r\n      password: inputValue.password,\r\n      confirmpassword: inputValue.confirmpassword,\r\n    };\r\n    if (inputValue.password === inputValue.confirmpassword) {\r\n      setallentry([...allentry, entries]);\r\n      console.log(\"Matched\");\r\n    } else {\r\n      console.log(\"Not matched\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setinputValue({ ...inputValue, [name]: value });\r\n  };\r\n\r\n  const PostData = async (e) => {\r\n    e.preventDefault();\r\n    const { firstname, lastname, email, password, confirmpassword } =\r\n      inputValue;\r\n\r\n    const res = await fetch(\"/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        firstname,\r\n        lastname,\r\n        email,\r\n        password,\r\n        confirmpassword,\r\n      }),\r\n    });\r\n    const response = await res.json()\r\n    if(response.status === 404 || ! response){\r\n        console.log('invalid registrtion');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form action=\"\" method=\"POST\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"FirstName\">First Name</label>\r\n          <input\r\n            type=\"name\"\r\n            name=\"firstname\"\r\n            value={inputValue.firstname}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"FirstName\">last Name</label>\r\n          <input\r\n            type=\"name\"\r\n            name=\"lastname\"\r\n            value={inputValue.lastname}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">E-mail Address</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"off\"\r\n            value={inputValue.email}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={inputValue.password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"confirmpassword\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmpassword\"\r\n            value={inputValue.confirmpassword}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={PostData}>\r\n            Register\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}