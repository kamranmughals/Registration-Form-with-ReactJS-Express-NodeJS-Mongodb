{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mern Stack\\\\Nodejs Express and MongoDB\\\\Registration-Form\\\\Client\\\\src\\\\register.jsx\";\nimport React from \"react\";\nimport logo from \"/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  //   const [inputValue, setinputValue] = useState({\n  //     firstname: \"\",\n  //     lastname: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //     confirmpassword: \"\",\n  //   });\n  //   const [allentry, setallentry] = useState([]);\n\n  //   const handleSubmit = (e) => {\n  //     e.preventDefault();\n\n  //     const entries = {\n  //       firstname: inputValue.firstname,\n  //       lastname: inputValue.lastname,\n  //       email: inputValue.email,\n  //       password: inputValue.password,\n  //       confirmpassword: inputValue.confirmpassword,\n  //     };\n  //     if (inputValue.password === inputValue.confirmpassword) {\n  //       setallentry([...allentry, entries]);\n  //       console.log(\"Matched\");\n  //     } else {\n  //       console.log(\"Not matched\");\n  //     }\n  //   };\n\n  //   const handleChange = (event) => {\n  //     const { name, value } = event.target;\n  //     setinputValue({ ...inputValue, [name]: value });\n  //   };\n\n  //   const PostData = async (e) => {\n  //     e.preventDefault();\n  //     const { firstname, lastname, email, password, confirmpassword } =\n  //       inputValue;\n\n  //     const res = await fetch(\"/register\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({\n  //         firstname,\n  //         lastname,\n  //         email,\n  //         password,\n  //         confirmpassword,\n  //       }),\n  //     });\n  //     const response = await res.json();\n  //     if (response.status === 422 || !response) {\n  //       console.log(\"invalid registration\");\n  //     } else {\n  //       console.log(\"Suucessfully registered\");\n  //     }\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"bg.jpg\",\n          alt: \"background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","logo","Register"],"sources":["D:/Mern Stack/Nodejs Express and MongoDB/Registration-Form/Client/src/register.jsx"],"sourcesContent":["import React from \"react\";\r\nimport logo  from \"/\"\r\n\r\nconst Register = () => {\r\n//   const [inputValue, setinputValue] = useState({\r\n//     firstname: \"\",\r\n//     lastname: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     confirmpassword: \"\",\r\n//   });\r\n//   const [allentry, setallentry] = useState([]);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const entries = {\r\n//       firstname: inputValue.firstname,\r\n//       lastname: inputValue.lastname,\r\n//       email: inputValue.email,\r\n//       password: inputValue.password,\r\n//       confirmpassword: inputValue.confirmpassword,\r\n//     };\r\n//     if (inputValue.password === inputValue.confirmpassword) {\r\n//       setallentry([...allentry, entries]);\r\n//       console.log(\"Matched\");\r\n//     } else {\r\n//       console.log(\"Not matched\");\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     setinputValue({ ...inputValue, [name]: value });\r\n//   };\r\n\r\n//   const PostData = async (e) => {\r\n//     e.preventDefault();\r\n//     const { firstname, lastname, email, password, confirmpassword } =\r\n//       inputValue;\r\n\r\n//     const res = await fetch(\"/register\", {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify({\r\n//         firstname,\r\n//         lastname,\r\n//         email,\r\n//         password,\r\n//         confirmpassword,\r\n//       }),\r\n//     });\r\n//     const response = await res.json();\r\n//     if (response.status === 422 || !response) {\r\n//       console.log(\"invalid registration\");\r\n//     } else {\r\n//       console.log(\"Suucessfully registered\");\r\n//     }\r\n//   };\r\n\r\n  return (\r\n    <>\r\n    <section>\r\n      <div>\r\n        <img src=\"bg.jpg\" alt=\"background\" />\r\n      </div>\r\n    </section>\r\n    \r\n            {/* <form action=\"\" method=\"POST\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"FirstName\">First Name</label>\r\n          <input\r\n            type=\"name\"\r\n            name=\"firstname\"\r\n            value={inputValue.firstname}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"FirstName\">last Name</label>\r\n          <input\r\n            type=\"name\"\r\n            name=\"lastname\"\r\n            value={inputValue.lastname}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">E-mail Address</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"off\"\r\n            value={inputValue.email}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={inputValue.password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"confirmpassword\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmpassword\"\r\n            value={inputValue.confirmpassword}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={PostData}>\r\n            Register\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </> */}\r\n    \r\n    \r\n    </>\r\n  )\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAO,GAAG;AAAA;AAAA;AAErB,MAAMC,QAAQ,GAAG,MAAM;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACE;IAAA,uBACA;MAAA,uBACE;QAAA,uBACE;UAAK,GAAG,EAAC,QAAQ;UAAC,GAAG,EAAC;QAAY;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IACjC;MAAA;MAAA;MAAA;IAAA;EACE,iBA0DP;AAEP,CAAC;AAAC,KA7HIA,QAAQ;AA+Hd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}