{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"D:\\\\Mern Stack\\\\Nodejs Express and MongoDB\\\\Registration-Form\\\\Client\\\\src\\\\register.jsx\";\nimport React from \"react\";\n// import logo  from \"./bg.jpg\"\nimport './index.css';\nvar Register = function Register() {\n  //   const [inputValue, setinputValue] = useState({\n  //     firstname: \"\",\n  //     lastname: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //     confirmpassword: \"\",\n  //   });\n  //   const [allentry, setallentry] = useState([]);\n\n  //   const handleSubmit = (e) => {\n  //     e.preventDefault();\n\n  //     const entries = {\n  //       firstname: inputValue.firstname,\n  //       lastname: inputValue.lastname,\n  //       email: inputValue.email,\n  //       password: inputValue.password,\n  //       confirmpassword: inputValue.confirmpassword,\n  //     };\n  //     if (inputValue.password === inputValue.confirmpassword) {\n  //       setallentry([...allentry, entries]);\n  //       console.log(\"Matched\");\n  //     } else {\n  //       console.log(\"Not matched\");\n  //     }\n  //   };\n\n  //   const handleChange = (event) => {\n  //     const { name, value } = event.target;\n  //     setinputValue({ ...inputValue, [name]: value });\n  //   };\n\n  //   const PostData = async (e) => {\n  //     e.preventDefault();\n  //     const { firstname, lastname, email, password, confirmpassword } =\n  //       inputValue;\n\n  //     const res = await fetch(\"/register\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({\n  //         firstname,\n  //         lastname,\n  //         email,\n  //         password,\n  //         confirmpassword,\n  //       }),\n  //     });\n  //     const response = await res.json();\n  //     if (response.status === 422 || !response) {\n  //       console.log(\"invalid registration\");\n  //     } else {\n  //       console.log(\"Suucessfully registered\");\n  //     }\n  //   };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"FirstName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"name\",\n    name: \"firstname\",\n    value: inputValue.firstname,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"FirstName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"name\",\n    name: \"lastname\",\n    value: inputValue.lastname,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"E-mail Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    autoComplete: \"off\",\n    value: inputValue.email,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: inputValue.password,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmpassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"confirmpassword\",\n    value: inputValue.confirmpassword,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: PostData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n};\nexport default Register;","map":{"version":3,"names":["React","Register","handleSubmit","inputValue","firstname","handleChange","lastname","email","password","confirmpassword","PostData"],"sources":["D:/Mern Stack/Nodejs Express and MongoDB/Registration-Form/Client/src/register.jsx"],"sourcesContent":["import React from \"react\";\r\n// import logo  from \"./bg.jpg\"\r\nimport './index.css'\r\n\r\nconst Register = () => {\r\n//   const [inputValue, setinputValue] = useState({\r\n//     firstname: \"\",\r\n//     lastname: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     confirmpassword: \"\",\r\n//   });\r\n//   const [allentry, setallentry] = useState([]);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const entries = {\r\n//       firstname: inputValue.firstname,\r\n//       lastname: inputValue.lastname,\r\n//       email: inputValue.email,\r\n//       password: inputValue.password,\r\n//       confirmpassword: inputValue.confirmpassword,\r\n//     };\r\n//     if (inputValue.password === inputValue.confirmpassword) {\r\n//       setallentry([...allentry, entries]);\r\n//       console.log(\"Matched\");\r\n//     } else {\r\n//       console.log(\"Not matched\");\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     setinputValue({ ...inputValue, [name]: value });\r\n//   };\r\n\r\n//   const PostData = async (e) => {\r\n//     e.preventDefault();\r\n//     const { firstname, lastname, email, password, confirmpassword } =\r\n//       inputValue;\r\n\r\n//     const res = await fetch(\"/register\", {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify({\r\n//         firstname,\r\n//         lastname,\r\n//         email,\r\n//         password,\r\n//         confirmpassword,\r\n//       }),\r\n//     });\r\n//     const response = await res.json();\r\n//     if (response.status === 422 || !response) {\r\n//       console.log(\"invalid registration\");\r\n//     } else {\r\n//       console.log(\"Suucessfully registered\");\r\n//     }\r\n//   };\r\n\r\n  return (\r\n    <>\r\n    \r\n           <form action=\"\" method=\"POST\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"FirstName\">First Name</label>\r\n          <input\r\n            type=\"name\"\r\n            name=\"firstname\"\r\n            value={inputValue.firstname}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"FirstName\">last Name</label>\r\n          <input\r\n            type=\"name\"\r\n            name=\"lastname\"\r\n            value={inputValue.lastname}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">E-mail Address</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"off\"\r\n            value={inputValue.email}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={inputValue.password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"confirmpassword\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmpassword\"\r\n            value={inputValue.confirmpassword}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={PostData}>\r\n            Register\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </> \r\n  )\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAO,aAAa;AAEpB,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,GAAS;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACE,uDAEO;IAAM,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC,MAAM;IAAC,QAAQ,EAAEC,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACxD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAmB,eAC7C;IACE,IAAI,EAAC,MAAM;IACX,IAAI,EAAC,WAAW;IAChB,KAAK,EAAEC,UAAU,CAACC,SAAU;IAC5B,QAAQ,EAAEC,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACvB,CACE,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAAkB,eAC5C;IACE,IAAI,EAAC,MAAM;IACX,IAAI,EAAC,UAAU;IACf,KAAK,EAAEF,UAAU,CAACG,QAAS;IAC3B,QAAQ,EAAED,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACvB,CACE,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,oBAAuB,eAC7C;IACE,IAAI,EAAC,OAAO;IACZ,IAAI,EAAC,OAAO;IACZ,YAAY,EAAC,KAAK;IAClB,KAAK,EAAEF,UAAU,CAACI,KAAM;IACxB,QAAQ,EAAEF,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACvB,CACE,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAAiB,eAC1C;IACE,IAAI,EAAC,UAAU;IACf,IAAI,EAAC,UAAU;IACf,KAAK,EAAEF,UAAU,CAACK,QAAS;IAC3B,QAAQ,EAAEH,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACvB,CACE,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBAAyB,eACzD;IACE,IAAI,EAAC,UAAU;IACf,IAAI,EAAC,iBAAiB;IACtB,KAAK,EAAEF,UAAU,CAACM,eAAgB;IAClC,QAAQ,EAAEJ,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACvB,CACE,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,IAAI,EAAC,QAAQ;IAAC,OAAO,EAAEK,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAE/B,CACL,CACD,CACN;AAEP,CAAC;AAED,eAAeT,QAAQ"},"metadata":{},"sourceType":"module"}